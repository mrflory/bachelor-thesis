<?php

/**
 * BaseBid
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $auction_id
 * @property integer $bidder_id
 * @property integer $bot_id
 * @property decimal $price
 * @property integer $countdown
 * @property Auction $Auction
 * @property Bidder $Bidder
 * @property Bot $Bot
 * 
 * @method integer getAuctionId()  Returns the current record's "auction_id" value
 * @method integer getBidderId()   Returns the current record's "bidder_id" value
 * @method integer getBotId()      Returns the current record's "bot_id" value
 * @method decimal getPrice()      Returns the current record's "price" value
 * @method integer getCountdown()  Returns the current record's "countdown" value
 * @method Auction getAuction()    Returns the current record's "Auction" value
 * @method Bidder  getBidder()     Returns the current record's "Bidder" value
 * @method Bot     getBot()        Returns the current record's "Bot" value
 * @method Bid     setAuctionId()  Sets the current record's "auction_id" value
 * @method Bid     setBidderId()   Sets the current record's "bidder_id" value
 * @method Bid     setBotId()      Sets the current record's "bot_id" value
 * @method Bid     setPrice()      Sets the current record's "price" value
 * @method Bid     setCountdown()  Sets the current record's "countdown" value
 * @method Bid     setAuction()    Sets the current record's "Auction" value
 * @method Bid     setBidder()     Sets the current record's "Bidder" value
 * @method Bid     setBot()        Sets the current record's "Bot" value
 * 
 * @package    bachelor
 * @subpackage model
 * @author     Florian Stallmann
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBid extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bid');
        $this->hasColumn('auction_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('bidder_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('bot_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('price', 'decimal', 10, array(
             'type' => 'decimal',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('countdown', 'integer', 10, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 10,
             ));


        $this->index('auct_bidd', array(
             'fields' => 
             array(
              0 => 'auction_id',
              1 => 'bidder_id',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Auction', array(
             'local' => 'auction_id',
             'foreign' => 'id'));

        $this->hasOne('Bidder', array(
             'local' => 'bidder_id',
             'foreign' => 'id'));

        $this->hasOne('Bot', array(
             'local' => 'bot_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}