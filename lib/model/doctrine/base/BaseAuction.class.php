<?php

/**
 * BaseAuction
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $session_id
 * @property string $name
 * @property timestamp $start_time
 * @property boolean $show_bidders
 * @property boolean $show_bidbutton
 * @property enum $bot_behaviour
 * @property integer $bid_countraise
 * @property integer $bid_raise_start
 * @property integer $bid_raise_limit
 * @property decimal $bid_priceraise
 * @property decimal $price
 * @property integer $countdown
 * @property boolean $show_directbuy
 * @property decimal $direct_price
 * @property string $description
 * @property string $image
 * @property decimal $valuation
 * @property decimal $bid_fee
 * @property decimal $current_price
 * @property integer $time_remaining
 * @property decimal $money_spent
 * @property timestamp $last_bid
 * @property integer $bidder_id
 * @property timestamp $end_time
 * @property Session $Session
 * @property Bidder $LastBidder
 * @property Doctrine_Collection $Bidder
 * @property Doctrine_Collection $Bots
 * @property Doctrine_Collection $Bids
 * 
 * @method integer             getSessionId()       Returns the current record's "session_id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method timestamp           getStartTime()       Returns the current record's "start_time" value
 * @method boolean             getShowBidders()     Returns the current record's "show_bidders" value
 * @method boolean             getShowBidbutton()   Returns the current record's "show_bidbutton" value
 * @method enum                getBotBehaviour()    Returns the current record's "bot_behaviour" value
 * @method integer             getBidCountraise()   Returns the current record's "bid_countraise" value
 * @method integer             getBidRaiseStart()   Returns the current record's "bid_raise_start" value
 * @method integer             getBidRaiseLimit()   Returns the current record's "bid_raise_limit" value
 * @method decimal             getBidPriceraise()   Returns the current record's "bid_priceraise" value
 * @method decimal             getPrice()           Returns the current record's "price" value
 * @method integer             getCountdown()       Returns the current record's "countdown" value
 * @method boolean             getShowDirectbuy()   Returns the current record's "show_directbuy" value
 * @method decimal             getDirectPrice()     Returns the current record's "direct_price" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method string              getImage()           Returns the current record's "image" value
 * @method decimal             getValuation()       Returns the current record's "valuation" value
 * @method decimal             getBidFee()          Returns the current record's "bid_fee" value
 * @method decimal             getCurrentPrice()    Returns the current record's "current_price" value
 * @method integer             getTimeRemaining()   Returns the current record's "time_remaining" value
 * @method decimal             getMoneySpent()      Returns the current record's "money_spent" value
 * @method timestamp           getLastBid()         Returns the current record's "last_bid" value
 * @method integer             getBidderId()        Returns the current record's "bidder_id" value
 * @method timestamp           getEndTime()         Returns the current record's "end_time" value
 * @method Session             getSession()         Returns the current record's "Session" value
 * @method Bidder              getLastBidder()      Returns the current record's "LastBidder" value
 * @method Doctrine_Collection getBidder()          Returns the current record's "Bidder" collection
 * @method Doctrine_Collection getBots()            Returns the current record's "Bots" collection
 * @method Doctrine_Collection getBids()            Returns the current record's "Bids" collection
 * @method Auction             setSessionId()       Sets the current record's "session_id" value
 * @method Auction             setName()            Sets the current record's "name" value
 * @method Auction             setStartTime()       Sets the current record's "start_time" value
 * @method Auction             setShowBidders()     Sets the current record's "show_bidders" value
 * @method Auction             setShowBidbutton()   Sets the current record's "show_bidbutton" value
 * @method Auction             setBotBehaviour()    Sets the current record's "bot_behaviour" value
 * @method Auction             setBidCountraise()   Sets the current record's "bid_countraise" value
 * @method Auction             setBidRaiseStart()   Sets the current record's "bid_raise_start" value
 * @method Auction             setBidRaiseLimit()   Sets the current record's "bid_raise_limit" value
 * @method Auction             setBidPriceraise()   Sets the current record's "bid_priceraise" value
 * @method Auction             setPrice()           Sets the current record's "price" value
 * @method Auction             setCountdown()       Sets the current record's "countdown" value
 * @method Auction             setShowDirectbuy()   Sets the current record's "show_directbuy" value
 * @method Auction             setDirectPrice()     Sets the current record's "direct_price" value
 * @method Auction             setDescription()     Sets the current record's "description" value
 * @method Auction             setImage()           Sets the current record's "image" value
 * @method Auction             setValuation()       Sets the current record's "valuation" value
 * @method Auction             setBidFee()          Sets the current record's "bid_fee" value
 * @method Auction             setCurrentPrice()    Sets the current record's "current_price" value
 * @method Auction             setTimeRemaining()   Sets the current record's "time_remaining" value
 * @method Auction             setMoneySpent()      Sets the current record's "money_spent" value
 * @method Auction             setLastBid()         Sets the current record's "last_bid" value
 * @method Auction             setBidderId()        Sets the current record's "bidder_id" value
 * @method Auction             setEndTime()         Sets the current record's "end_time" value
 * @method Auction             setSession()         Sets the current record's "Session" value
 * @method Auction             setLastBidder()      Sets the current record's "LastBidder" value
 * @method Auction             setBidder()          Sets the current record's "Bidder" collection
 * @method Auction             setBots()            Sets the current record's "Bots" collection
 * @method Auction             setBids()            Sets the current record's "Bids" collection
 * 
 * @package    bachelor
 * @subpackage model
 * @author     Florian Stallmann
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAuction extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('auction');
        $this->hasColumn('session_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('start_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('show_bidders', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('show_bidbutton', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => true,
             ));
        $this->hasColumn('bot_behaviour', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'off',
              1 => 'random',
              2 => 'lru',
              3 => 'all',
             ),
             'default' => 'off',
             ));
        $this->hasColumn('bid_countraise', 'integer', 10, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 20,
             'length' => 10,
             ));
        $this->hasColumn('bid_raise_start', 'integer', 10, array(
             'type' => 'integer',
             'default' => 20,
             'length' => 10,
             ));
        $this->hasColumn('bid_raise_limit', 'integer', 10, array(
             'type' => 'integer',
             'default' => 20,
             'length' => 10,
             ));
        $this->hasColumn('bid_priceraise', 'decimal', 10, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 1,
             'length' => 10,
             ));
        $this->hasColumn('price', 'decimal', 10, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 0,
             'length' => 10,
             ));
        $this->hasColumn('countdown', 'integer', 10, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 60,
             'length' => 10,
             ));
        $this->hasColumn('show_directbuy', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('direct_price', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'length' => 4000,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('valuation', 'decimal', 10, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 100,
             'length' => 10,
             ));
        $this->hasColumn('bid_fee', 'decimal', 10, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 0.1,
             'length' => 10,
             ));
        $this->hasColumn('current_price', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             ));
        $this->hasColumn('time_remaining', 'integer', 10, array(
             'type' => 'integer',
             'length' => 10,
             ));
        $this->hasColumn('money_spent', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             ));
        $this->hasColumn('last_bid', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('bidder_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('end_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Session', array(
             'local' => 'session_id',
             'foreign' => 'id'));

        $this->hasOne('Bidder as LastBidder', array(
             'local' => 'bidder_id',
             'foreign' => 'id'));

        $this->hasMany('Bidder', array(
             'local' => 'id',
             'foreign' => 'auction_id'));

        $this->hasMany('Bot as Bots', array(
             'local' => 'id',
             'foreign' => 'auction_id'));

        $this->hasMany('Bid as Bids', array(
             'local' => 'id',
             'foreign' => 'auction_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}